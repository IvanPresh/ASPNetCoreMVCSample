@model ASPNetCoreMVCSample.Models.ProductModel
<div class="row">
	<div class="col-lg-6 col-md-6">
		<section id="main-carousel" class="splide">
			<div class="splide__track">
				<ul class="splide__list" id="img-main">
					@{
						if (Model.ImagePaths != null)
						{
							for (var i = 0; i < Model.ImagePaths.Count; i++)
							{
								<li class="splide__slide">
									<img src="@Url.Content("~/")@Model.ImagePaths[i]" alt="">
								</li>
							}
						}
					}
				</ul>
			</div>
		</section>
		<section id="thumbnail-carousel"
				 class="splide"
				 aria-label="The carousel with thumbnails. Selecting a thumbnail will change the Beautiful Gallery carousel.">
			<div class="splide__track">
				<ul class="splide__list" id="img-thumb">
					@{
						if (Model.ImagePaths != null)
						{
							for (var i = 0; i < Model.ImagePaths.Count; i++)
							{

								<li class="splide__slide">
									<img src="@Url.Content("~/")@Model.ImagePaths[i]" alt="">
								</li>
							}
						}
					}
				</ul>
			</div>
		</section>
	</div>
    <div class="col-md-12">
		<form action="/product/Edit" method="post" id="productForm">
            <div class="form-horizontal">
                
                <input type="hidden" name="Id" value="@Model.Id"/>

                <div class="form-group">
                    <label class ="control-label col-md-6">
                        Name
                    </label>
                    <input type="text" name="Name" value="@Model.Name" class="col-md-6" />
                </div>
                <div class="form-group">
                    <label class="control-label col-md-6">
                        Description
                    </label>
                    <input type="text" name="Description" value="@Model.Description" class="col-md-6" />
                </div><div class="form-group">
                    <label class="control-label col-md-6">
                        Price
                    </label>
                    <input type="text" name="Price" value="@Model.Price" class="col-md-6" />
                </div><div class="form-group">
                    <label class="control-label col-md-6">
                        Quantity
                    </label>
                    <input type="text" name="Quantity" value="@Model.Quantity" class="col-md-6" />
                </div><div class="form-group">
                    <input type="button" value="Update" class="btn btn-primary" onclick="submitForm()" />
                    <a href="/product/index">back to product index</a>
                </div>
        </form>
    </div>


</div>
<script>

	// Initialize an array to store the selected images
	var selectedImages = [];

	document.addEventListener('DOMContentLoaded', function () {
		prepareThumbs();
		getImagesAndSaveForUpload()
	});


	function prepareThumbs() {
		var main = new Splide('#main-carousel', {
			type: 'fade',
			rewind: true,
			pagination: false,
			arrows: true,
		});


		var thumbnails = new Splide('#thumbnail-carousel', {
			fixedWidth: 100,
			fixedHeight: 60,
			gap: 10,
			rewind: true,
			pagination: false,
			isNavigation: true,
			breakpoints: {
				600: {
					fixedWidth: 60,
					fixedHeight: 44,
				},
			},
		});


		main.sync(thumbnails);
		main.mount();
		thumbnails.mount();

	}

	function getImagesAndSaveForUpload() {
		var imageMain = document.getElementById('img-thumb');

		// Get all li elements
		var liElements = imageMain.querySelectorAll('li');

		// Loop through each li element
		for (var i = 0; i < liElements.length; i++) {
			// Get the img child element
			var imgElement = liElements[i].querySelector('img');
			// Check if an img element exists
			if (imgElement) {
				// Extract the src value
				var imgSrc = imgElement.getAttribute('src');

				// Fetch the image data and convert it into a File object
				fetch(imgSrc)
					.then(response => response.blob())
					.then(blob => {
						var fileName = imgSrc.split('/').pop();
						var file = new File([blob], fileName, { type: blob.type });

						// Push the File object into the selectedImages array
						selectedImages.push(file);
					})
					.catch(console.error);
			}
		}


	}



	//prevent the form from being submitted by the browser's default behavior and instead submit it using the submitForm method
	document.getElementById('productForm').addEventListener('submit', function (e) {
		e.preventDefault();
		submitForm();
	});




	function handleImagePreview() {
		//	var imagePreview = document.getElementById('imagePreview');
		var imageMain = document.getElementById('img-main');
		var imageThumb = document.getElementById('img-thumb');
		var input = document.getElementById('imageInput');
		var files = input.files;

		for (var i = 0; i < files.length; i++) {
			var file = files[i];
			if (file.type.match('image.*')) {
				var reader = new FileReader();

				reader.onload = function (event) {
					//var image = document.createElement('img');
					//image.src = event.target.result;
					//image.className = 'img-thumbnail';
					//imagePreview.appendChild(image);


					var image1 = document.createElement('img');
					image1.src = event.target.result;

					var image2 = document.createElement('img');
					image2.src = event.target.result;


					var liMain = document.createElement('li');
					liMain.className = 'splide__slide';
					var liThumb = document.createElement('li');
					liThumb.className = 'splide__slide';


					liMain.appendChild(image1);
					liThumb.appendChild(image2);

					imageMain.appendChild(liMain);
					imageThumb.appendChild(liThumb);

					prepareThumbs();
					// Add the selected image to the array
					selectedImages.push(file);
				};

				reader.readAsDataURL(file);
			}
		}
	}

	// Attach the 'change' event to the file input
	document.getElementById('imageInput').addEventListener('change', handleImagePreview);

	function submitForm() {
		var formData = new FormData();



		// Add other form data
		var form = document.getElementById('productForm');
		var formElements = form.elements;
		for (var i = 0; i < formElements.length; i++) {
			var element = formElements[i];
			if (element.name) {
				if (element.name != 'Images') {
					formData.append(element.name, element.value);
				}
			}
		}

		// Add all selected images to the form data
		for (var i = 0; i < selectedImages.length; i++) {
			formData.append('Images', selectedImages[i]);
		}


		// Submit the form using AJAX or a similar method
		// The URL and method will depend on your server-side code
		$.ajax({
			url: '/Product/Edit',
			method: 'POST',
			enctype: 'multipart/form-data',
			data: formData,
			processData: false,
			contentType: false,
			success: function (response) 
			{
				if (response.success) 
				{
					window.location.href = response.redirectUrl;
				}
				else 
				{
					alert("something went wrong");
				}
			},
			error: function () 
			{
				// Handle errors
			}
		});
	}
</script>
