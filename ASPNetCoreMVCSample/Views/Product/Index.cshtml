@model X.PagedList.IPagedList<ProductModel>
@using X.Web.PagedList

@{
    // Check if the user is authenticated and in the Admin or SuperAdmin role
    bool isAuthorized = User.IsInRole("Admin") || User.IsInRole("SuperAdmin");
   
}

<h3>Products In-stock</h3>

@if (isAuthorized)
{
    <a href="@Url.Action("Add", "Product")" class="btn btn-primary">
        Add Product
    </a>
}


<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Price</th>
            <th>Quantity</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var prodt in Model)
        {
            <tr>
                <td>@prodt.Name</td>
                <td>@prodt.Description</td>
                <td>&#x20A6; @prodt.Price.ToString("N")</td>
                <td>@prodt.Quantity</td>
                <td><a href="/product/Edit/@prodt.Id" class="btn btn-primary">Edit</a></td>
                <td>
                    <form asp-action="Delete" asp-controller="Product" method="post" data-Id="@prodt.Id" onsubmit="return confirmDelete();">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@prodt.Id" />
                        <input type="submit" value="Delete" class="btn btn-danger btn-xs" />
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
</div>

<script>
    function confirmDelete() {
        return confirm('Are you sure you really want to delete this Product?');
    }
</script>
