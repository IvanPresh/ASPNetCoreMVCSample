@model List<Categories>

@{
    // Check if the user is authenticated and in the Admin or SuperAdmin role.
    // This determines whether certain actions (like adding or deleting categories) are allowed.
    bool isAuthorized = User.IsInRole("Admin") || User.IsInRole("SuperAdmin");
}

@if (isAuthorized)
{
    // Display the "Add Category" button only if the user is authorized (Admin or SuperAdmin).
    <a href="@Url.Action("Add", "Category")" class="btn btn-primary">
        Add Category
    </a>
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th> 
        </tr>
    </thead>
    <tbody>
        @foreach (var Catg in Model)
        {
            <tr>
                <td>@Catg.Name</td> 
                @if (isAuthorized)
                {
                    //If the user is authorized (Admin or SuperAdmin), show the delete button -->
                    <td>
                        <!-- The delete form allows the user to delete a category -->
                        <form asp-action="Delete" asp-controller="Category" method="post" onsubmit="return confirmDelete();">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@Catg.Id" /> 
                            <input type="submit" value="Delete" class="btn btn-danger btn-xs" /> <!--Delete button -->
                        </form>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<!-- JavaScript function to confirm deletion, showing a confirmation dialog to the user -->
<script>
    function confirmDelete() {
        return confirm('Are you sure you really want to delete this Product?');
    }
</script>
